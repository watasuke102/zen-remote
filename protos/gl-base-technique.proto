syntax = "proto3";

package zen.remote;

import "common.proto";

service GlBaseTechniqueService
{
  rpc New(NewGlBaseTechniqueRequest) returns (EmptyResponse);

  rpc Delete(DeleteResourceRequest) returns (EmptyResponse);

  rpc BindProgram(BindProgramRequest) returns (EmptyResponse);

  rpc BindVertexArray(BindVertexArrayRequest) returns (EmptyResponse);

  rpc BindTexture(BindTextureRequest) returns (EmptyResponse);

  rpc GlUniform(GlUniformRequest) returns (EmptyResponse);

  rpc GlDrawArrays(GlDrawArraysRequest) returns (EmptyResponse);
}

message NewGlBaseTechniqueRequest
{
  uint64 id = 1;
  uint64 rendering_unit_id = 2;
}

message BindProgramRequest
{
  uint64 id = 1;
  uint64 program_id = 2;
}

message BindVertexArrayRequest
{
  uint64 id = 1;
  uint64 vertex_array_id = 2;
}

/**
 * If name is not an empty string, the sampler uniform variable of that name is
 * associated with GL_TEXTURE0 + binding
 */
message BindTextureRequest
{
  uint64 id = 1;
  uint32 binding = 2;
  string name = 3;
  uint64 texture_id = 4;
  uint32 target = 5;
}

/**
 * These values are subject to several constraints conditions.
 * 1. 0 < col <= 4 && 0 < row <= 4
 * 2. If col == 1, the value is considered a vector, and transpose is ignored.
 * 3. If col > 1, the value is considered a float matrix, and type is ignored.
 * 4. If name is not an empty string, the name is used to find the uniform
 *    variable to be modified, and location is ignored.
 */
message GlUniformRequest
{
  uint64 id = 1;
  int32 location = 2;
  string name = 3;
  uint32 type = 4;  // enum UniformVariableType
  uint32 col = 5;
  uint32 row = 6;
  uint32 count = 7;
  bool transpose = 8;
  bytes value = 9;
}

message GlDrawArraysRequest
{
  uint64 id = 1;
  uint32 mode = 2;
  int32 first = 3;
  uint32 count = 4;
}
